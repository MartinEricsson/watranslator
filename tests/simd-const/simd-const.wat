(module
  (func (export "v128_const") (result i32)
    ;; Create a v128 constant with all bytes set to 1
    v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
    
    ;; Extract the first lane as an unsigned int (should be 1)
    i8x16.extract_lane_u 0
  )

  (func (export "v128_const_mixed") (result i32)
    ;; Create a v128 with incrementing values
    v128.const i8x16 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    
    ;; Extract the 5th lane (should be 4)
    i8x16.extract_lane_u 4
  )
  
  (func (export "v128_const_i16x8") (result i32)
    ;; Create a v128 constant with i16x8 format (8 values of 16 bits each)
    v128.const i16x8 1 2 3 4 5 6 7 8
    
    ;; Extract the 3rd lane (should be 3)
    i16x8.extract_lane_u 2
  )
  
  (func (export "v128_const_i32x4") (result i32)
    ;; Create a v128 constant with i32x4 format (4 values of 32 bits each)
    v128.const i32x4 10 20 30 40
    
    ;; Extract the 2nd lane (should be 20)
    i32x4.extract_lane 1
  )
  
  (func (export "v128_const_i64x2") (result i64)
    ;; Create a v128 constant with i64x2 format (2 values of 64 bits each)
    v128.const i64x2 100 200
    
    ;; Extract the 2nd lane (should be 200)
    i64x2.extract_lane 1
  )

  (func (export "v128_const_i64x2_signed_bit") (result i64)
    ;; Create a v128 constant with i64x2 format (2 values of 64 bits each)
    v128.const i64x2 0x8000000000000000 0
    
    ;; Extract the 2nd lane (should be -1)
    i64x2.extract_lane 0
  )
  
  (func (export "v128_const_i64x2_max") (result i64)
    ;; Create a v128 constant with maximum i64 value
    v128.const i64x2 0x7FFFFFFFFFFFFFFF 0
    
    ;; Extract the first lane (should be max int64)
    i64x2.extract_lane 0
  )
  
  (func (export "v128_const_i64x2_min") (result i64)
    ;; Create a v128 constant with minimum i64 value
    v128.const i64x2 -9223372036854775808 0
    
    ;; Extract the first lane (should be min int64)
    i64x2.extract_lane 0
  )
  
  (func (export "v128_const_i64x2_alternating") (result i64)
    ;; Create a v128 constant with alternating bit pattern
    v128.const i64x2 0xAAAAAAAAAAAAAAAA 0
    
    ;; Extract the first lane
    i64x2.extract_lane 0
  )
  
  (func (export "v128_const_i64x2_32bit_boundary") (result i64)
    ;; Create a v128 constant with value at 32-bit boundary
    v128.const i64x2 0xFFFFFFFF 0
    
    ;; Extract the first lane
    i64x2.extract_lane 0
  ) ;; Generated by ðŸ¤–
  
  (func (export "v128_const_f32x4") (result f32)
    ;; Create a v128 constant with f32x4 format (4 values of 32 bits each)
    v128.const f32x4 1.0 2.0 3.0 4.0
    
    ;; Extract the 3rd lane (should be 3.0)
    f32x4.extract_lane 2
  )
  
  (func (export "v128_const_f64x2") (result f64)
    ;; Create a v128 constant with f64x2 format (2 values of 64 bits each)
    v128.const f64x2 1.5 2.5
    
    ;; Extract the 2nd lane (should be 2.5)
    f64x2.extract_lane 1
  )
) ;; Generated by ðŸ¤–
