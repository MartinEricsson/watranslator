// filepath: /Users/martinericsson/dev/fes-compiler/tests/simd-replace-lane/simd-replace-lane-test.mjs
import { readTestData, logger } from '../test-utils.mjs';

// Test for i8x16.replace_lane instruction
async function simdReplaceLaneTest(debug = false) {
    const log = logger(debug);
    try {
        const { wasmBuffer } = await readTestData('simd-replace-lane/simd-replace-lane.wat');
        const { instance } = await WebAssembly.instantiate(wasmBuffer);

        const tests = [
            { name: 'i8x16.replace_lane', expected: 42, functionName: 'i8x16_replace_lane_test' },
            { name: 'i8x16.replace_lane_multiple', expected: -56, functionName: 'i8x16_replace_lane_multiple' },
            { name: 'i8x16.replace_lane_negative', expected: -30, functionName: 'i8x16_replace_lane_negative' }
        ];

        for (const test of tests) {
            const { name, expected, functionName } = test;
            const result = instance.exports[functionName]();
            log(`Testing ${name}: expected ${expected}, got ${result}`);
            if (result !== expected) {
                throw new Error(`${name} failed: expected ${expected}, got ${result}`);
            }
        }
        log('All SIMD i8x16.replace_lane tests passed!');

        return true;
    } catch (error) {
        console.error('Error during SIMD i8x16.replace_lane test:', error);
        return false;
    }
}

export default simdReplaceLaneTest;
// Generated by ðŸ¤–
