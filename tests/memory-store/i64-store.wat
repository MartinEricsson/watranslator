(module
  ;; Define a memory section with 1 page (64KB)
  (memory 1)
  
  ;; Export the memory
  (export "memory" (memory 0))
  
  ;; Test i64.store - Store a 64-bit value to memory
  ;; Generated by 🤖
  (func $store_i64 (param $addr i32) (param $value i64)
    local.get $addr
    local.get $value
    i64.store
  )
  
  ;; Test i64.store8 - Store the low 8 bits of an i64 value to memory
  ;; Generated by 🤖
  (func $store_i64_8 (param $addr i32) (param $value i64)
    local.get $addr
    local.get $value
    i64.store8
  )

  ;; Test i64.store16 - Store the low 16 bits of an i64 value to memory
  ;; Generated by 🤖
  (func $store_i64_16 (param $addr i32) (param $value i64)
    local.get $addr
    local.get $value
    i64.store16
  )

  ;; Test i64.store32 - Store the low 32 bits of an i64 value to memory
  ;; Generated by 🤖
  (func $store_i64_32 (param $addr i32) (param $value i64)
    local.get $addr
    local.get $value
    i64.store32
  )
  
  ;; Read functions to verify stored values
  
  ;; Read a full 64-bit value
  ;; Generated by 🤖
  (func $read_i64 (param $addr i32) (result i64)
    local.get $addr
    i64.load
  )
  
  ;; Read an 8-bit value, sign-extended to i64
  ;; Generated by 🤖
  (func $read_i64_8_s (param $addr i32) (result i64)
    local.get $addr
    i64.load8_s
  )
  
  ;; Read an 8-bit value, zero-extended to i64
  ;; Generated by 🤖
  (func $read_i64_8_u (param $addr i32) (result i64)
    local.get $addr
    i64.load8_u
  )
  
  ;; Read a 16-bit value, sign-extended to i64
  ;; Generated by 🤖
  (func $read_i64_16_s (param $addr i32) (result i64)
    local.get $addr
    i64.load16_s
  )
  
  ;; Read a 16-bit value, zero-extended to i64
  ;; Generated by 🤖
  (func $read_i64_16_u (param $addr i32) (result i64)
    local.get $addr
    i64.load16_u
  )
  
  ;; Read a 32-bit value, sign-extended to i64
  ;; Generated by 🤖
  (func $read_i64_32_s (param $addr i32) (result i64)
    local.get $addr
    i64.load32_s
  )
  
  ;; Read a 32-bit value, zero-extended to i64
  ;; Generated by 🤖
  (func $read_i64_32_u (param $addr i32) (result i64)
    local.get $addr
    i64.load32_u
  )
  
  ;; Export test functions
  (export "store_i64" (func $store_i64))
  (export "store_i64_8" (func $store_i64_8))
  (export "store_i64_16" (func $store_i64_16))
  (export "store_i64_32" (func $store_i64_32))
  (export "read_i64" (func $read_i64))
  (export "read_i64_8_s" (func $read_i64_8_s))
  (export "read_i64_8_u" (func $read_i64_8_u))
  (export "read_i64_16_s" (func $read_i64_16_s))
  (export "read_i64_16_u" (func $read_i64_16_u))
  (export "read_i64_32_s" (func $read_i64_32_s))
  (export "read_i64_32_u" (func $read_i64_32_u))
)