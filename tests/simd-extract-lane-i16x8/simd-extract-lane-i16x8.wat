(module
  (func (export "i16x8_extract_lane_s_positive") (result i32)
    ;; Create a v128 constant with values in the i16 range
    v128.const i16x8 -32768 -16384 -1024 -1 0 1024 16384 32767
    
    ;; Extract the last lane as a signed int (should be 32767 - max positive i16)
    i16x8.extract_lane_s 7
  )

  (func (export "i16x8_extract_lane_s_negative") (result i32)
    ;; Create a v128 constant with values in the i16 range
    v128.const i16x8 -32768 -16384 -1024 -1 0 1024 16384 32767
    
    ;; Extract the first lane as a signed int (should be -32768 - min negative i16)
    i16x8.extract_lane_s 0
  )
  
  (func (export "i16x8_extract_lane_u") (result i32)
    ;; Create a v128 with a value that uses the full unsigned i16 range
    v128.const i16x8 65535 1 2 3 4 5 6 7
    
    ;; Extract the first lane as unsigned int (should be 65535)
    i16x8.extract_lane_u 0
  )

  (func (export "i16x8_extract_lane_s_vs_u") (result i32)
    ;; Create a v128 with a value that will have different signed/unsigned interpretations
    v128.const i16x8 65535 1 2 3 4 5 6 7
    
    ;; Extract the first lane as signed int 
    ;; (should be -1 since 65535 is interpreted as -1 in i16 signed)
    i16x8.extract_lane_s 0
  )
) ;; Generated by ðŸ¤–
