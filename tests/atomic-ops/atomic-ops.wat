(module
  ;; Define memory with shared flag (required for atomics)
  (memory 1 1 shared)
  (export "memory" (memory 0))

  ;; Function to store a value at a given address
  (func $store (param $addr i32) (param $value i32)
    local.get $addr
    local.get $value
    i32.store
  )
  (export "store" (func $store))

  ;; Function to load a value from a given address
  (func $load (param $addr i32) (result i32)
    local.get $addr
    i32.load
  )
  (export "load" (func $load))

  ;; Function to test i32.atomic.rmw.add operation
  (func $atomicAdd (param $addr i32) (param $value i32) (result i32)
    local.get $addr
    local.get $value
    i32.atomic.rmw.add
  )
  (export "atomicAdd" (func $atomicAdd))
  
  ;; Function to test i32.atomic.rmw.sub operation
  (func $atomicSub (param $addr i32) (param $value i32) (result i32)
    local.get $addr
    local.get $value
    i32.atomic.rmw.sub
  )
  (export "atomicSub" (func $atomicSub))

  ;; Function to test i32.atomic.rmw.and operation
  (func $atomicAnd32 (param $addr i32) (param $value i32) (result i32)
    local.get $addr
    local.get $value
    i32.atomic.rmw.and ;; Generated by 🤖
  )
  (export "atomicAnd32" (func $atomicAnd32))
  
  ;; Function to test i32.atomic.rmw.or operation
  (func $atomicOr32 (param $addr i32) (param $value i32) (result i32)
    local.get $addr
    local.get $value
    i32.atomic.rmw.or
  )
  (export "atomicOr32" (func $atomicOr32))
  
  ;; Function to test i32.atomic.rmw.xor operation
  (func $atomicXor32 (param $addr i32) (param $value i32) (result i32)
    local.get $addr
    local.get $value
    i32.atomic.rmw.xor
  )
  (export "atomicXor32" (func $atomicXor32))
  
  ;; Function to test i32.atomic.rmw.xchg operation
  (func $atomicXchg32 (param $addr i32) (param $value i32) (result i32)
    local.get $addr
    local.get $value
    i32.atomic.rmw.xchg
  )
  (export "atomicXchg32" (func $atomicXchg32))
  
  ;; Function to test i32.atomic.rmw.cmpxchg operation
  (func $atomicCmpxchg32 (param $addr i32) (param $expected i32) (param $replacement i32) (result i32)
    local.get $addr
    local.get $expected
    local.get $replacement
    i32.atomic.rmw.cmpxchg
  )
  (export "atomicCmpxchg32" (func $atomicCmpxchg32))

   ;; Function to store a 64-bit value at a given address
  (func $store64 (param $addr i32) (param $value i64)
    local.get $addr
    local.get $value
    i64.store)
  (export "store64" (func $store64))

  ;; Function to load a 64-bit value from a given address
  (func $load64 (param $addr i32) (result i64)
    local.get $addr
    i64.load
  )
  (export "load64" (func $load64))

  (func $atomicAdd64 (param $addr i32) (param $value i64) (result i64)
    local.get $addr
    local.get $value
    i64.atomic.rmw.add
  )
  (export "atomicAdd64" (func $atomicAdd64))

  (func $atomicSub64 (param $addr i32) (param $value i64) (result i64)
    local.get $addr
    local.get $value
    i64.atomic.rmw.sub
  )
  (export "atomicSub64" (func $atomicSub64))

  (func $atomicAnd64 (param $addr i32) (param $value i64) (result i64)
    local.get $addr
    local.get $value
    i64.atomic.rmw.and
  )
  (export "atomicAnd64" (func $atomicAnd64))

  ;; Function to test i64.atomic.rmw.or operation
  (func $atomicOr64 (param $addr i32) (param $value i64) (result i64)
    local.get $addr
    local.get $value
    i64.atomic.rmw.or
  )
  (export "atomicOr64" (func $atomicOr64))

  ;; Function to test i64.atomic.rmw.xor operation
  (func $atomicXor64 (param $addr i32) (param $value i64) (result i64)
    local.get $addr
    local.get $value
    i64.atomic.rmw.xor
  )
  (export "atomicXor64" (func $atomicXor64))
  
  ;; Function to test i64.atomic.rmw.xchg operation
  (func $atomicXchg64 (param $addr i32) (param $value i64) (result i64)
    local.get $addr
    local.get $value
    i64.atomic.rmw.xchg
  )
  (export "atomicXchg64" (func $atomicXchg64))
  
  ;; Function to test i64.atomic.rmw.cmpxchg operation
  (func $atomicCmpxchg64 (param $addr i32) (param $expected i64) (param $replacement i64) (result i64)
    local.get $addr
    local.get $expected
    local.get $replacement
    i64.atomic.rmw.cmpxchg
  )
  (export "atomicCmpxchg64" (func $atomicCmpxchg64))
  
  ;; Function to test i32.atomic.rmw8.add_u operation
  (func $atomicAdd8 (param $addr i32) (param $value i32) (result i32)
    local.get $addr
    local.get $value
    i32.atomic.rmw8.add_u ;; Generated by 🤖
  )
  (export "atomicAdd8" (func $atomicAdd8))
  
  ;; Function to test i32.atomic.rmw16.add_u operation
  (func $atomicAdd16 (param $addr i32) (param $value i32) (result i32)
    local.get $addr
    local.get $value
    i32.atomic.rmw16.add_u ;; Generated by 🤖
  )
  (export "atomicAdd16" (func $atomicAdd16))
  
  ;; Function to test i64.atomic.rmw8.add_u operation
  (func $atomicAdd8_64 (param $addr i32) (param $value i64) (result i64)
    local.get $addr
    local.get $value
    i64.atomic.rmw8.add_u ;; Generated by 🤖
  )
  (export "atomicAdd8_64" (func $atomicAdd8_64))
  
  ;; Function to test i64.atomic.rmw16.add_u operation
  (func $atomicAdd16_64 (param $addr i32) (param $value i64) (result i64)
    local.get $addr
    local.get $value
    i64.atomic.rmw16.add_u ;; Generated by 🤖
  )
  (export "atomicAdd16_64" (func $atomicAdd16_64))
  
  ;; Function to test i64.atomic.rmw32.add_u operation
  (func $atomicAdd32_64 (param $addr i32) (param $value i64) (result i64)
    local.get $addr
    local.get $value
    i64.atomic.rmw32.add_u ;; Generated by 🤖
  )
  (export "atomicAdd32_64" (func $atomicAdd32_64))

  ;; Function to test i32.atomic.rmw8.sub_u operation
  (func $atomicSub8 (param $addr i32) (param $value i32) (result i32)
    local.get $addr
    local.get $value
    i32.atomic.rmw8.sub_u ;; Generated by 🤖
  )
  (export "atomicSub8" (func $atomicSub8))
  
  ;; Function to test i32.atomic.rmw16.sub_u operation
  (func $atomicSub16 (param $addr i32) (param $value i32) (result i32)
    local.get $addr
    local.get $value
    i32.atomic.rmw16.sub_u ;; Generated by 🤖
  )
  (export "atomicSub16" (func $atomicSub16))
  
  ;; Function to test i64.atomic.rmw8.sub_u operation
  (func $atomicSub8_64 (param $addr i32) (param $value i64) (result i64)
    local.get $addr
    local.get $value
    i64.atomic.rmw8.sub_u ;; Generated by 🤖
  )
  (export "atomicSub8_64" (func $atomicSub8_64))
  
  ;; Function to test i64.atomic.rmw16.sub_u operation
  (func $atomicSub16_64 (param $addr i32) (param $value i64) (result i64)
    local.get $addr
    local.get $value
    i64.atomic.rmw16.sub_u ;; Generated by 🤖
  )
  (export "atomicSub16_64" (func $atomicSub16_64))
  
  ;; Function to test i64.atomic.rmw32.sub_u operation
  (func $atomicSub32_64 (param $addr i32) (param $value i64) (result i64)
    local.get $addr
    local.get $value
    i64.atomic.rmw32.sub_u ;; Generated by 🤖
  )
  (export "atomicSub32_64" (func $atomicSub32_64))

  ;; Function to test i32.atomic.rmw8.and_u operation
  (func $atomicAnd8 (param $addr i32) (param $value i32) (result i32)
    local.get $addr
    local.get $value
    i32.atomic.rmw8.and_u ;; Generated by 🤖
  )
  (export "atomicAnd8" (func $atomicAnd8))
  
  ;; Function to test i32.atomic.rmw16.and_u operation
  (func $atomicAnd16 (param $addr i32) (param $value i32) (result i32)
    local.get $addr
    local.get $value
    i32.atomic.rmw16.and_u ;; Generated by 🤖
  )
  (export "atomicAnd16" (func $atomicAnd16))
  
  ;; Function to test i64.atomic.rmw8.and_u operation
  (func $atomicAnd8_64 (param $addr i32) (param $value i64) (result i64)
    local.get $addr
    local.get $value
    i64.atomic.rmw8.and_u ;; Generated by 🤖
  )
  (export "atomicAnd8_64" (func $atomicAnd8_64))
  
  ;; Function to test i64.atomic.rmw16.and_u operation
  (func $atomicAnd16_64 (param $addr i32) (param $value i64) (result i64)
    local.get $addr
    local.get $value
    i64.atomic.rmw16.and_u ;; Generated by 🤖
  )
  (export "atomicAnd16_64" (func $atomicAnd16_64))
  
  ;; Function to test i64.atomic.rmw32.and_u operation
  (func $atomicAnd32_64 (param $addr i32) (param $value i64) (result i64)
    local.get $addr
    local.get $value
    i64.atomic.rmw32.and_u ;; Generated by 🤖
  )
  (export "atomicAnd32_64" (func $atomicAnd32_64))
  
  ;; Function to test i32.atomic.rmw8.or_u operation
  (func $atomicOr8 (param $addr i32) (param $value i32) (result i32)
    local.get $addr
    local.get $value
    i32.atomic.rmw8.or_u ;; Generated by 🤖
  )
  (export "atomicOr8" (func $atomicOr8))
  
  ;; Function to test i32.atomic.rmw16.or_u operation
  (func $atomicOr16 (param $addr i32) (param $value i32) (result i32)
    local.get $addr
    local.get $value
    i32.atomic.rmw16.or_u ;; Generated by 🤖
  )
  (export "atomicOr16" (func $atomicOr16))
  
  ;; Function to test i64.atomic.rmw8.or_u operation
  (func $atomicOr8_64 (param $addr i32) (param $value i64) (result i64)
    local.get $addr
    local.get $value
    i64.atomic.rmw8.or_u ;; Generated by 🤖
  )
  (export "atomicOr8_64" (func $atomicOr8_64))
  
  ;; Function to test i64.atomic.rmw16.or_u operation
  (func $atomicOr16_64 (param $addr i32) (param $value i64) (result i64)
    local.get $addr
    local.get $value
    i64.atomic.rmw16.or_u ;; Generated by 🤖
  )
  (export "atomicOr16_64" (func $atomicOr16_64))
  
  ;; Function to test i64.atomic.rmw32.or_u operation
  (func $atomicOr32_64 (param $addr i32) (param $value i64) (result i64)
    local.get $addr
    local.get $value
    i64.atomic.rmw32.or_u ;; Generated by 🤖
  )
  (export "atomicOr32_64" (func $atomicOr32_64))
  
  ;; Function to test i32.atomic.rmw8.xor_u operation
  (func $atomicXor8 (param $addr i32) (param $value i32) (result i32)
    local.get $addr
    local.get $value
    i32.atomic.rmw8.xor_u ;; Generated by 🤖
  )
  (export "atomicXor8" (func $atomicXor8))
  
  ;; Function to test i32.atomic.rmw16.xor_u operation
  (func $atomicXor16 (param $addr i32) (param $value i32) (result i32)
    local.get $addr
    local.get $value
    i32.atomic.rmw16.xor_u ;; Generated by 🤖
  )
  (export "atomicXor16" (func $atomicXor16))
  
  ;; Function to test i64.atomic.rmw8.xor_u operation
  (func $atomicXor8_64 (param $addr i32) (param $value i64) (result i64)
    local.get $addr
    local.get $value
    i64.atomic.rmw8.xor_u ;; Generated by 🤖
  )
  (export "atomicXor8_64" (func $atomicXor8_64))
  
  ;; Function to test i64.atomic.rmw16.xor_u operation
  (func $atomicXor16_64 (param $addr i32) (param $value i64) (result i64)
    local.get $addr
    local.get $value
    i64.atomic.rmw16.xor_u ;; Generated by 🤖
  )
  (export "atomicXor16_64" (func $atomicXor16_64))
  
  ;; Function to test i64.atomic.rmw32.xor_u operation
  (func $atomicXor32_64 (param $addr i32) (param $value i64) (result i64)
    local.get $addr
    local.get $value
    i64.atomic.rmw32.xor_u ;; Generated by 🤖
  )
  (export "atomicXor32_64" (func $atomicXor32_64))
  
  ;; Function to test i32.atomic.rmw8.xchg_u operation
  (func $atomicXchg8 (param $addr i32) (param $value i32) (result i32)
    local.get $addr
    local.get $value
    i32.atomic.rmw8.xchg_u ;; Generated by 🤖
  )
  (export "atomicXchg8" (func $atomicXchg8))
  
  ;; Function to test i32.atomic.rmw16.xchg_u operation
  (func $atomicXchg16 (param $addr i32) (param $value i32) (result i32)
    local.get $addr
    local.get $value
    i32.atomic.rmw16.xchg_u ;; Generated by 🤖
  )
  (export "atomicXchg16" (func $atomicXchg16))
  
  ;; Function to test i64.atomic.rmw8.xchg_u operation
  (func $atomicXchg8_64 (param $addr i32) (param $value i64) (result i64)
    local.get $addr
    local.get $value
    i64.atomic.rmw8.xchg_u ;; Generated by 🤖
  )
  (export "atomicXchg8_64" (func $atomicXchg8_64))
  
  ;; Function to test i64.atomic.rmw16.xchg_u operation
  (func $atomicXchg16_64 (param $addr i32) (param $value i64) (result i64)
    local.get $addr
    local.get $value
    i64.atomic.rmw16.xchg_u ;; Generated by 🤖
  )
  (export "atomicXchg16_64" (func $atomicXchg16_64))
  
  ;; Function to test i64.atomic.rmw32.xchg_u operation
  (func $atomicXchg32_64 (param $addr i32) (param $value i64) (result i64)
    local.get $addr
    local.get $value
    i64.atomic.rmw32.xchg_u ;; Generated by 🤖
  )
  (export "atomicXchg32_64" (func $atomicXchg32_64))
  
  ;; Function to test i32.atomic.rmw8.cmpxchg_u operation
  (func $atomicCmpxchg8 (param $addr i32) (param $expected i32) (param $replacement i32) (result i32)
    local.get $addr
    local.get $expected
    local.get $replacement
    i32.atomic.rmw8.cmpxchg_u ;; Generated by 🤖
  )
  (export "atomicCmpxchg8" (func $atomicCmpxchg8))
  
  ;; Function to test i32.atomic.rmw16.cmpxchg_u operation
  (func $atomicCmpxchg16 (param $addr i32) (param $expected i32) (param $replacement i32) (result i32)
    local.get $addr
    local.get $expected
    local.get $replacement
    i32.atomic.rmw16.cmpxchg_u ;; Generated by 🤖
  )
  (export "atomicCmpxchg16" (func $atomicCmpxchg16))
  
  ;; Function to test i64.atomic.rmw8.cmpxchg_u operation
  (func $atomicCmpxchg8_64 (param $addr i32) (param $expected i64) (param $replacement i64) (result i64)
    local.get $addr
    local.get $expected
    local.get $replacement
    i64.atomic.rmw8.cmpxchg_u ;; Generated by 🤖
  )
  (export "atomicCmpxchg8_64" (func $atomicCmpxchg8_64))
  
  ;; Function to test i64.atomic.rmw16.cmpxchg_u operation
  (func $atomicCmpxchg16_64 (param $addr i32) (param $expected i64) (param $replacement i64) (result i64)
    local.get $addr
    local.get $expected
    local.get $replacement
    i64.atomic.rmw16.cmpxchg_u ;; Generated by 🤖
  )
  (export "atomicCmpxchg16_64" (func $atomicCmpxchg16_64))
  
  ;; Function to test i64.atomic.rmw32.cmpxchg_u operation
  (func $atomicCmpxchg32_64 (param $addr i32) (param $expected i64) (param $replacement i64) (result i64)
    local.get $addr
    local.get $expected
    local.get $replacement
    i64.atomic.rmw32.cmpxchg_u ;; Generated by 🤖
  )
  (export "atomicCmpxchg32_64" (func $atomicCmpxchg32_64))
)