// Generated by ü§ñ
import assert from 'assert';
import { readTestData } from '../test-utils.mjs';

async function testTableFill(debug = false) {
  try {
    const { wasmBuffer, ast } = await readTestData('table-fill/table-fill.wat', debug);

    // Verify AST structure
    assert(ast[0].tables && ast[0].tables.length > 0, 'Table should be present in AST');
    assert.strictEqual(ast[0].tables[0].min, 4, 'Table min size should be 4');
    
    // Instantiate and test
    const { instance } = await WebAssembly.instantiate(wasmBuffer);
    
    // Test table contents
    const table = instance.exports.tbl;
    assert(table instanceof WebAssembly.Table, 'Table should be exported');
    assert.strictEqual(table.length, 4, 'Table should have length 4');
    
    const fillTable = instance.exports.fill_table;
    
    // Fill indices 1-3 with f1
    fillTable(1, instance.exports.f1, 3);
    
    // Verify filled indices return correct values
    assert.strictEqual(instance.exports.get_func(1), 42, 'After fill: Function at index 1 should return 42');
    assert.strictEqual(instance.exports.get_func(2), 42, 'After fill: Function at index 2 should return 42');
    assert.strictEqual(instance.exports.get_func(3), 42, 'After fill: Function at index 3 should return 42');
    
    // Fill middle section with f2
    fillTable(2, instance.exports.f2, 1);
    
    // Verify functions after second fill
    assert.strictEqual(instance.exports.get_func(1), 42, 'After second fill: Function at index 1 should still return 42');
    assert.strictEqual(instance.exports.get_func(2), 43, 'After second fill: Function at index 2 should return 43');
    assert.strictEqual(instance.exports.get_func(3), 42, 'After second fill: Function at index 3 should still return 42');
    
    // Fill with null
    fillTable(0, null, 2);
    
    try {
      // This should throw when trying to call null
      instance.exports.get_func(0);
      assert.fail('Should throw when calling null function reference');
    } catch (e) {
      assert(e instanceof WebAssembly.RuntimeError, 'Expected WebAssembly.RuntimeError when calling null function reference');
    }
    
    try {
      instance.exports.get_func(1);
      assert.fail('Should throw when calling null function reference');
    } catch (e) {
      assert(e instanceof WebAssembly.RuntimeError, 'Expected WebAssembly.RuntimeError when calling null function reference');
    }
    
    // Verify function at index 2 still works
    assert.strictEqual(instance.exports.get_func(2), 43, 'After null fill: Function at index 2 should still return 43');
    
    if (debug) console.log('‚úÖ Table fill test passed');
    return true;
  } catch (error) {
    console.error('‚ùå Table fill test failed:', error);
    return false;
  }
}

export default testTableFill;