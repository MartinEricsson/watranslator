// Generated by ü§ñ
import assert from 'assert';
import { readTestData } from '../test-utils.mjs';

async function testTableGrow(debug = false) {
  try {
    const { wasmBuffer, ast } = await readTestData('table-grow/table-grow.wat', debug);

    // Verify AST structure
    assert(ast[0].tables && ast[0].tables.length > 0, 'Table should be present in AST');
    assert.strictEqual(ast[0].tables[0].min, 2, 'Table min size should be 2');
    assert.strictEqual(ast[0].tables[0].max, 10, 'Table max size should be 10');
    
    // Instantiate and test
    const { instance } = await WebAssembly.instantiate(wasmBuffer);
    
    // Test table contents
    const table = instance.exports.tbl;
    assert(table instanceof WebAssembly.Table, 'Table should be exported');
    assert.strictEqual(table.length, 2, 'Table should have initial length 2');
    
    // Test growing the table
    const growTable = instance.exports.grow_table;
    const tableSize = instance.exports.table_size;

    // Grow by 3 elements (should succeed)
    const oldSize1 = growTable(3);
    assert.strictEqual(oldSize1, 2, 'Old size should be 2');
    assert.strictEqual(tableSize(), 5, 'New size should be 5');
    assert.strictEqual(table.length, 5, 'Table length should match');

    // Grow by 4 elements (should succeed)
    const oldSize2 = growTable(4);
    assert.strictEqual(oldSize2, 5, 'Old size should be 5');
    assert.strictEqual(tableSize(), 9, 'New size should be 9');
    assert.strictEqual(table.length, 9, 'Table length should match');

    // Try to grow by 2 elements (should fail as it would exceed max)
    const oldSize3 = growTable(2);
    assert.strictEqual(oldSize3, -1, 'Should fail when exceeding max size');
    assert.strictEqual(tableSize(), 9, 'Size should remain unchanged');
    assert.strictEqual(table.length, 9, 'Table length should remain unchanged');

    if (debug) console.log('‚úÖ Table grow test passed');
    return true;
  } catch (error) {
    console.error('‚ùå Table grow test failed:', error);
    throw error;
  }
}

export default testTableGrow;