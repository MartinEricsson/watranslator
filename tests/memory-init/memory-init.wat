(module
  ;; Generated by ðŸ¤–
  ;; Declare a memory with initial size of 1 page (64KB)
  (memory $mem 1)

  ;; Export the memory so we can inspect it from our test
  (export "memory" (memory $mem))

  ;; Function to initialize memory from a data segment
  ;; Parameters:
  ;;   $dest - Destination address where to start copying data
  ;;   $offset - Offset in the data segment
  ;;   $size - Number of bytes to copy
  (func $init (param $dest i32) (param $offset i32) (param $size i32)
    local.get $dest
    local.get $offset  
    local.get $size
    i32.const 1      ;; Push segment index onto stack for memory.init
    memory.init      ;; Initialize memory from data segment
  )

  ;; Function to read a byte from memory
  (func $readByte (param $addr i32) (result i32)
    local.get $addr
    i32.load8_u
  )

  ;; Function to drop a data segment after it's no longer needed
  (func $dropSegment
    i32.const 1      ;; Push segment index onto stack for data.drop
    data.drop        ;; Drop the data segment
  )

  ;; Active data segment (automatically copied to memory at index 0)
  (data (i32.const 0) "\01\02\03\04\05\06\07\08\09\0A")
  
  ;; Passive data segment (used with memory.init)
  (data $special_data "\AA\BB\CC\DD\EE\FF\11\22\33\44")

  ;; Export the functions
  (export "init" (func $init))
  (export "readByte" (func $readByte))
  (export "dropSegment" (func $dropSegment))
)