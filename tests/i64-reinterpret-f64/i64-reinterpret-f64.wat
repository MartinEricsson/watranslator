(module
  ;; Basic function that reinterprets i64 bits as f64
  ;; Generated by 🤖
  (func $reinterpret_i64 (param $value i64) (result f64)
    local.get $value
    f64.reinterpret_i64
  )
  
  ;; Test zero
  ;; Generated by 🤖
  (func $test_zero (result f64)
    i64.const 0
    f64.reinterpret_i64
  )
  
  ;; Test value for 1.0
  ;; Generated by 🤖
  (func $test_one (result f64)
    i64.const 0x3FF0000000000000
    f64.reinterpret_i64
  )
  
  ;; Test value for -1.0
  ;; Generated by 🤖
  (func $test_neg_one (result f64)
    i64.const 0xBFF0000000000000
    f64.reinterpret_i64
  )
  
  ;; Test value for NaN
  ;; Generated by 🤖
  (func $test_nan (result f64)
    i64.const 0x7FF8000000000000
    f64.reinterpret_i64
  )
  
  ;; Test value for Infinity
  ;; Generated by 🤖
  (func $test_infinity (result f64)
    i64.const 0x7FF0000000000000
    f64.reinterpret_i64
  )
  
  ;; Test value for -Infinity
  ;; Generated by 🤖
  (func $test_neg_infinity (result f64)
    i64.const 0xFFF0000000000000
    f64.reinterpret_i64
  )
  
  ;; Test some specific bit pattern
  ;; Generated by 🤖
  (func $test_specific_bits (result f64)
    i64.const 0x4045000000000000 ;; 42.0 in IEEE-754
    f64.reinterpret_i64
  )
  
  ;; Export functions
  ;; Generated by 🤖
  (export "reinterpret_i64" (func $reinterpret_i64))
  (export "test_zero" (func $test_zero))
  (export "test_one" (func $test_one))
  (export "test_neg_one" (func $test_neg_one))
  (export "test_nan" (func $test_nan))
  (export "test_infinity" (func $test_infinity))
  (export "test_neg_infinity" (func $test_neg_infinity))
  (export "test_specific_bits" (func $test_specific_bits))
)