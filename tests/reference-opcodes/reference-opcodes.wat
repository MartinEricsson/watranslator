;; Generated by ðŸ¤–
(module
  ;; Define the function type first
  (type $add_one_type (func (param i32) (result i32)))

  ;; Define a table that will hold function references
  (table $tbl 2 funcref)

  ;; Define a function that we'll reference
  (func $add_one (type $add_one_type)
    local.get 0
    i32.const 1
    i32.add)

  ;; Function to get a reference to add_one
  (func $get_func (result funcref)
    ref.func $add_one)

  ;; Function to test if we can call through the reference
  (func $test_call (param i32) (result i32)
    ;; Get function reference and store in table
    i32.const 0  ;; table index first
    ref.func $add_one  ;; then the function reference
    table.set $tbl

    ;; Call through table
    local.get 0
    i32.const 0
    call_indirect (type $add_one_type))

  ;; Exports for testing
  (export "add_one" (func $add_one))
  (export "get_func" (func $get_func))
  (export "test_call" (func $test_call))
  (export "tbl" (table $tbl)))