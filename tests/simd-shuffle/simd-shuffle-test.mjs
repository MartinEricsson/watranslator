import { readTestData, logger } from '../test-utils.mjs';

async function testSIMDShuffle(debug = false) {
    const log = logger(debug);
    try {
        const { wasmBuffer } = await readTestData('simd-shuffle/simd-shuffle.wat', debug);
        const { instance } = await WebAssembly.instantiate(wasmBuffer, {});
        const { i8x16_shuffle0 } = instance.exports;

        // Test i8x16.shuffle operation
        const result = i8x16_shuffle0();
        log(`i8x16.shuffle test: ${result === 16 ? 'PASSED' : 'FAILED'}`);
        if (result !== 16) {
            throw new Error(`i8x16.shuffle failed: expected 16, got ${result}`);
        }

        log('SIMD i8x16.shuffle test passed!');
        return true;
    } catch (error) {
        console.error('Error during SIMD i8x16.shuffle test:', error);
        return false;
    }
} // Generated by ðŸ¤–

export default testSIMDShuffle;
