;; Generated by ðŸ¤–
(module
  (memory (export "memory") 1)
  
  (data (i32.const 0) "\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F")
  (data (i32.const 16) "\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F")
  (data (i32.const 32) "\FF\FE\FD\FC\FB\FA\F9\F8\F7\F6\F5\F4\F3\F2\F1\F0")
  (data (i32.const 48) "\01\00\01\00\01\00\01\00\01\00\01\00\01\00\01\00")

  (func (export "i32x4_abs_test") (result i32)
    i32.const 32
    v128.load align=4
    i32x4.abs
    i32x4.extract_lane 0
    )

  (func (export "i32x4_neg_test") (result i32)
    i32.const 16
    v128.load
    i32x4.neg
    i32x4.extract_lane 0)

  (func (export "i32x4_all_true_test") (result i32)
    i32.const 16
    v128.load
    i32x4.all_true)

  (func (export "i32x4_bitmask_test") (result i32)
    i32.const 32
    v128.load
    i32x4.bitmask)

  (func (export "i32x4_extend_low_i16x8_s_test") (result i32)
    i32.const 32
    v128.load
    i32x4.extend_low_i16x8_s
    i32x4.extract_lane 0)

  (func (export "i32x4_extend_high_i16x8_s_test") (result i32)
    i32.const 32
    v128.load
    i32x4.extend_high_i16x8_s
    i32x4.extract_lane 0)

  (func (export "i32x4_extend_low_i16x8_u_test") (result i32)
    i32.const 32
    v128.load
    i32x4.extend_low_i16x8_u
    i32x4.extract_lane 0)

  (func (export "i32x4_extend_high_i16x8_u_test") (result i32)
    i32.const 32
    v128.load
    i32x4.extend_high_i16x8_u
    i32x4.extract_lane 0)

  (func (export "i32x4_shl_test") (result i32)
    i32.const 16
    v128.load
    i32.const 2
    i32x4.shl
    i32x4.extract_lane 0)

  (func (export "i32x4_shr_s_test") (result i32)
    i32.const 32
    v128.load
    i32.const 2
    i32x4.shr_s
    i32x4.extract_lane 0)

  (func (export "i32x4_shr_u_test") (result i32)
    i32.const 32
    v128.load
    i32.const 2
    i32x4.shr_u
    i32x4.extract_lane 0)
    
  (func (export "i32x4_add_test") (result i32)
    i32.const 0
    v128.load
    i32.const 16
    v128.load
    i32x4.add
    i32x4.extract_lane 0)

  (func (export "i32x4_sub_test") (result i32)
    i32.const 16
    v128.load
    i32.const 0
    v128.load
    i32x4.sub
    i32x4.extract_lane 0)

  (func (export "i32x4_mul_test") (result i32)
    i32.const 0
    v128.load
    i32.const 16
    v128.load
    i32x4.mul
    i32x4.extract_lane 0)

  (func (export "i32x4_min_s_test") (result i32)
    i32.const 0
    v128.load
    i32.const 32
    v128.load
    i32x4.min_s
    i32x4.extract_lane 0)

  (func (export "i32x4_min_u_test") (result i32)
    i32.const 0
    v128.load
    i32.const 32
    v128.load
    i32x4.min_u
    i32x4.extract_lane 0)

  (func (export "i32x4_max_s_test") (result i32)
    i32.const 0
    v128.load
    i32.const 32
    v128.load
    i32x4.max_s
    i32x4.extract_lane 0)

  (func (export "i32x4_max_u_test") (result i32)
    i32.const 0
    v128.load
    i32.const 32
    v128.load
    i32x4.max_u
    i32x4.extract_lane 0)

  (func (export "i32x4_dot_i16x8_s_test") (result i32)
    i32.const 0
    v128.load
    i32.const 16
    v128.load
    i32x4.dot_i16x8_s
    i32x4.extract_lane 0)

  (func (export "i32x4_extmul_low_i16x8_s_test") (result i32)
    i32.const 0
    v128.load
    i32.const 16
    v128.load
    i32x4.extmul_low_i16x8_s
    i32x4.extract_lane 0)

  (func (export "i32x4_extmul_high_i16x8_s_test") (result i32)
    i32.const 0
    v128.load
    i32.const 16
    v128.load
    i32x4.extmul_high_i16x8_s
    i32x4.extract_lane 0)

  (func (export "i32x4_extmul_low_i16x8_u_test") (result i32)
    i32.const 0
    v128.load
    i32.const 16
    v128.load
    i32x4.extmul_low_i16x8_u
    i32x4.extract_lane 0)

  (func (export "i32x4_extmul_high_i16x8_u_test") (result i32)
    i32.const 0
    v128.load
    i32.const 16
    v128.load
    i32x4.extmul_high_i16x8_u
    i32x4.extract_lane 0)

  (func (export "i32x4_extadd_pairwise_i16x8_s_test") (result i32)
    i32.const 32
    v128.load
    i32x4.extadd_pairwise_i16x8_s
    i32x4.extract_lane 0)

  (func (export "i32x4_extadd_pairwise_i16x8_u_test") (result i32)
    i32.const 32
    v128.load
    i32x4.extadd_pairwise_i16x8_u
    i32x4.extract_lane 0)
)
