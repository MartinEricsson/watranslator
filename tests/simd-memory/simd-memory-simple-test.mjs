import { readTestData, logger } from '../test-utils.mjs';

async function testSIMDMemorySimple(debug = false) {
    const log = logger(debug);
    try {
        const { wasmBuffer } = await readTestData('simd-memory/simd-memory-simple.wat', debug);
        log('SIMD simple memory test WAT file loaded successfully');
        
        const { instance } = await WebAssembly.instantiate(wasmBuffer);
        log('SIMD simple memory test WASM module instantiated successfully');
        
        // Test basic v128.load
        const loadResult = instance.exports.test_v128_load();
        log(`test_v128_load: got ${loadResult}, expected 0`);
        if (loadResult !== 0) {
            throw new Error(`v128.load test failed: expected 0, got ${loadResult}`);
        }
        
        log('Simple SIMD memory test passed!');
        return true;
    } catch (error) {
        console.error('Error during simple SIMD memory test:', error);
        return false;
    }
}

export default testSIMDMemorySimple;
// Generated by ðŸ¤–
