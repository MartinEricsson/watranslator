import { readTestData, logger } from '../test-utils.mjs';

async function testSIMDf32x4Compare(debug = false) {
    const log = logger(debug);
    try {
        const { wasmBuffer } = await readTestData('simd-f32x4-compare/simd-f32x4-compare.wat', debug);
        log('SIMD f32x4 comparison test WAT file loaded successfully');
        
        const { instance } = await WebAssembly.instantiate(wasmBuffer);
        log('SIMD f32x4 comparison test WASM module instantiated successfully');
        
        // Test f32x4.eq
        const eqResult = instance.exports.test_f32x4_eq();
        log(`test_f32x4_eq: got ${eqResult}, expected -2`);
        if (eqResult !== -2) {
            throw new Error(`f32x4.eq test failed: expected -2, got ${eqResult}`);
        }
        
        // Test f32x4.ne
        const neResult = instance.exports.test_f32x4_ne();
        log(`test_f32x4_ne: got ${neResult}, expected -2`);
        if (neResult !== -2) {
            throw new Error(`f32x4.ne test failed: expected -2, got ${neResult}`);
        }
        
        // Test f32x4.lt
        const ltResult = instance.exports.test_f32x4_lt();
        log(`test_f32x4_lt: got ${ltResult}, expected -3`);
        if (ltResult !== -3) {
            throw new Error(`f32x4.lt test failed: expected -3, got ${ltResult}`);
        }
        
        // Test f32x4.gt
        const gtResult = instance.exports.test_f32x4_gt();
        log(`test_f32x4_gt: got ${gtResult}, expected -2`);
        if (gtResult !== -2) {
            throw new Error(`f32x4.gt test failed: expected -2, got ${gtResult}`);
        }
        
        // Test f32x4.le
        const leResult = instance.exports.test_f32x4_le();
        log(`test_f32x4_le: got ${leResult}, expected -3`);
        if (leResult !== -3) {
            throw new Error(`f32x4.le test failed: expected -3, got ${leResult}`);
        }
        
        // Test f32x4.ge
        const geResult = instance.exports.test_f32x4_ge();
        log(`test_f32x4_ge: got ${geResult}, expected -3`);
        if (geResult !== -3) {
            throw new Error(`f32x4.ge test failed: expected -3, got ${geResult}`);
        }
        
        return true;
    } catch (error) {
        console.error('SIMD f32x4 comparison tests failed:', error);
        throw error;
    }
}

export default testSIMDf32x4Compare;
// Generated by ðŸ¤–
