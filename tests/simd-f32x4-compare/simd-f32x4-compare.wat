(module
  ;; Memory for our test vectors
  (memory 1)

  ;; Function to test f32x4.eq
  (func $test_f32x4_eq (export "test_f32x4_eq") (result i32) (local v128)
    ;; Define test vectors
    v128.const f32x4 10.0 20.0 30.0 40.0  ;; a
    v128.const f32x4 10.0 25.0 30.0 45.0  ;; b
    ;; Compare for equality
    f32x4.eq
    ;; Extract results and combine into a single i32
    local.tee 0  ;; Store result in local 0 and keep a copy on stack
    i32x4.extract_lane 0
    local.get 0
    i32x4.extract_lane 1
    i32.add
    local.get 0
    i32x4.extract_lane 2
    i32.add
    local.get 0
    i32x4.extract_lane 3
    i32.add
    ;; Should be -1 + 0 + -1 + 0 = -2 (where -1 is 0xFFFFFFFF for true)
  )

  ;; Function to test f32x4.ne
  (func $test_f32x4_ne (export "test_f32x4_ne") (result i32) (local v128)
    v128.const f32x4 10.0 20.0 30.0 40.0  ;; a
    v128.const f32x4 10.0 25.0 30.0 45.0  ;; b
    f32x4.ne
    ;; Extract results and combine
    local.tee 0
    i32x4.extract_lane 0
    local.get 0
    i32x4.extract_lane 1
    i32.add
    local.get 0
    i32x4.extract_lane 2
    i32.add
    local.get 0
    i32x4.extract_lane 3
    i32.add
    ;; Should be 0 + -1 + 0 + -1 = -2
  )

  ;; Function to test f32x4.lt
  (func $test_f32x4_lt (export "test_f32x4_lt") (result i32) (local v128)
    v128.const f32x4 10.0 20.0 30.0 40.0
    v128.const f32x4 15.0 15.0 35.0 50.0
    f32x4.lt
    ;; Extract results and combine
    local.tee 0
    i32x4.extract_lane 0
    local.get 0
    i32x4.extract_lane 1
    i32.add
    local.get 0
    i32x4.extract_lane 2
    i32.add
    local.get 0
    i32x4.extract_lane 3
    i32.add
    ;; Should be -1 + 0 + -1 + -1 = -3
  )

  ;; Function to test f32x4.gt
  (func $test_f32x4_gt (export "test_f32x4_gt") (result i32) (local v128)
    v128.const f32x4 15.0 20.0 35.0 40.0
    v128.const f32x4 10.0 25.0 30.0 50.0
    f32x4.gt
    ;; Extract results and combine
    local.tee 0
    i32x4.extract_lane 0
    local.get 0
    i32x4.extract_lane 1
    i32.add
    local.get 0
    i32x4.extract_lane 2
    i32.add
    local.get 0
    i32x4.extract_lane 3
    i32.add
    ;; Should be -1 + 0 + -1 + 0 = -2
  )

  ;; Function to test f32x4.le
  (func $test_f32x4_le (export "test_f32x4_le") (result i32) (local v128)
    v128.const f32x4 10.0 20.0 30.0 40.0
    v128.const f32x4 10.0 25.0 35.0 30.0
    f32x4.le
    ;; Extract results and combine
    local.tee 0
    i32x4.extract_lane 0
    local.get 0
    i32x4.extract_lane 1
    i32.add
    local.get 0
    i32x4.extract_lane 2
    i32.add
    local.get 0
    i32x4.extract_lane 3
    i32.add
    ;; Should be -1 + -1 + -1 + 0 = -3
  )

  ;; Function to test f32x4.ge
  (func $test_f32x4_ge (export "test_f32x4_ge") (result i32) (local v128)
    v128.const f32x4 10.0 25.0 30.0 40.0
    v128.const f32x4 10.0 20.0 35.0 30.0
    f32x4.ge
    ;; Extract results and combine
    local.tee 0
    i32x4.extract_lane 0
    local.get 0
    i32x4.extract_lane 1
    i32.add
    local.get 0
    i32x4.extract_lane 2
    i32.add
    local.get 0
    i32x4.extract_lane 3
    i32.add
    ;; Should be -1 + -1 + 0 + -1 = -3
  )
) ;; Generated by ðŸ¤–
