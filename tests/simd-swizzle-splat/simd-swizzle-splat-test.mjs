import { readTestData, logger } from '../test-utils.mjs';

// Test for SIMD swizzle and splat instructions
async function testSIMDSwizzleSplat(debug = false) {
    const log = logger(debug);
    try {
        const { wasmBuffer } = await readTestData('simd-swizzle-splat/simd-swizzle-splat.wat', debug);
        log('SIMD swizzle and splat test WAT file loaded successfully');
        
        const { instance } = await WebAssembly.instantiate(wasmBuffer);
        log('SIMD swizzle and splat test WASM module instantiated successfully');
        
        // Test swizzle operation
        const swizzleResult = instance.exports.i8x16_swizzle_test();
        log(`i8x16_swizzle_test: got ${swizzleResult}, expected 1`);
        if (swizzleResult !== 1) {
            throw new Error(`i8x16.swizzle test failed: expected 1, got ${swizzleResult}`);
        }
        
        // Test i8x16.splat
        const i8SplatResult = instance.exports.i8x16_splat_test();
        log(`i8x16_splat_test: got ${i8SplatResult}, expected 168`);
        if (i8SplatResult !== 168) {
            throw new Error(`i8x16.splat test failed: expected 168, got ${i8SplatResult}`);
        }
        
        // Test i16x8.splat
        const i16SplatResult = instance.exports.i16x8_splat_test();
        log(`i16x8_splat_test: got ${i16SplatResult}, expected 1000`);
        if (i16SplatResult !== 1000) {
            throw new Error(`i16x8.splat test failed: expected 1000, got ${i16SplatResult}`);
        }
        
        // Test i32x4.splat
        const i32SplatResult = instance.exports.i32x4_splat_test();
        log(`i32x4_splat_test: got ${i32SplatResult}, expected 12345`);
        if (i32SplatResult !== 12345) {
            throw new Error(`i32x4.splat test failed: expected 12345, got ${i32SplatResult}`);
        }
        
        // Test i64x2.splat
        const i64SplatResult = instance.exports.i64x2_splat_test();
        log(`i64x2_splat_test: got ${i64SplatResult}, expected 9876543210n`);
        if (i64SplatResult !== BigInt(9876543210)) {
            throw new Error(`i64x2.splat test failed: expected 9876543210n, got ${i64SplatResult}`);
        }
        
        // Test f32x4.splat
        const f32SplatResult = instance.exports.f32x4_splat_test();
        log(`f32x4_splat_test: got ${f32SplatResult}, expected â‰ˆ3.14159`);
        if (Math.abs(f32SplatResult - 3.14159) > 0.0001) {
            throw new Error(`f32x4.splat test failed: expected â‰ˆ3.14159, got ${f32SplatResult}`);
        }
        
        // Test f64x2.splat
        const f64SplatResult = instance.exports.f64x2_splat_test();
        log(`f64x2_splat_test: got ${f64SplatResult}, expected â‰ˆ2.71828`);
        if (Math.abs(f64SplatResult - 2.71828) > 0.0001) {
            throw new Error(`f64x2.splat test failed: expected â‰ˆ2.71828, got ${f64SplatResult}`);
        }
        
        log('All SIMD swizzle and splat tests passed!');
        return true;
    } catch (error) {
        console.error('Error during SIMD swizzle and splat test:', error);
        return false;
    }
}

export default testSIMDSwizzleSplat;
// Generated by ðŸ¤–
