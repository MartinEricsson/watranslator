import wasmConstants from "../constants.mjs";
import { encodeULEB128 } from "../compile-utils.mjs";

const {
    SECTION,
} = wasmConstants;

export function functionSection(functions, binary) {
    if (functions.length > 0) {
        // Generated by ðŸ¤–
        // Filter out imported functions
        const nonImportedFunctions = functions.filter(func => !func.import);
        
        if (nonImportedFunctions.length === 0) {
            return;
        }
        
        // Maps functions to their type signatures
        let functionSection = [SECTION.FUNCTION]; // Section ID

        // Function signatures
        const funcSignatures = [...encodeULEB128(nonImportedFunctions.length)];
        for (let i = 0; i < nonImportedFunctions.length; i++) {
            funcSignatures.push(...encodeULEB128(i)); // Type index
        }

        // Section size
        functionSection.push(...encodeULEB128(funcSignatures.length));

        // Section content
        functionSection.push(...funcSignatures);

        binary.push(...functionSection);
    }
}