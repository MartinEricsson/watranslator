import { atEnd, peekToken, getToken, getCurrentCursor } from './tape.mjs';

export function parseTable() {
    // Generated by ðŸ¤–
    // Parse table declaration: (table <min> <max>? <type>)
    let min = 0;
    let max = null;
    let id = null;
    let type = 'funcref';  // Default type is funcref

    // Check for table identifier
    if (!atEnd() && peekToken().startsWith('$')) {
        id = getToken();
    }

    // Parse minimum size (required)
    if (!atEnd() && /^\d+$/.test(peekToken())) {
        min = Number.parseInt(getToken(), 10);

        // Parse maximum size (optional)
        if (!atEnd() && /^\d+$/.test(peekToken())) {
            max = Number.parseInt(getToken(), 10);
        }
    }

    // Parse element type (optional, defaults to funcref)
    if (!atEnd() &&
        (peekToken() === 'funcref' ||
            peekToken() === 'externref' ||
            peekToken() === 'anyref')) {
        type = getToken();
    }

    const position = getCurrentCursor();

    return { id, min, max, type, position };
}